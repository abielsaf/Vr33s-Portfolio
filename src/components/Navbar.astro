---
import ThemeToggle from './ThemeToggle.astro';
import LanguageSwitch from './LanguageSwitch.astro';
import { languageStore } from '../store/language';
import { translations } from '../i18n/translations';

const lang = languageStore.getLanguage();
const t = translations[lang];
---

<nav class="nav-container">
  <div class="nav-content">
    <a href="/" class="site-title">
      <img id="logo" src="/V3redondo.png" alt="Víctor Casabella Logo" class="logo" />
      <>Víctor Casabella</>
    </a>
    <button class="mobile-menu-toggle" aria-label="Toggle Menu">
      <span class="bar"></span>
      <span class="bar"></span>
      <span class="bar"></span>
    </button>
    <div class="nav-links">
      <a href="/">{t.nav.home}</a>
      <a href="/about">{t.nav.about}</a>
      <a href="/gallery">{t.nav.gallery}</a>
      <a href="/contact">{t.nav.contact}</a>
    <!--   <LanguageSwitch /> -->
      <ThemeToggle />
    </div>
  </div>
</nav>

<style>
  .nav-container {
    background-color: var(--nav-bg);
    padding: 1rem;
    position: sticky;
    top: 0;
    z-index: 100;
  }

  .nav-content {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: space-between;
    align-items: center; /* Center items vertically */
  }

  .site-title {
    display: flex; /* Use flexbox for alignment */
    align-items: center; /* Vertically center the logo and text */
    gap: 10px; /* Space between the logo and text */
    text-decoration: none; /* Remove underline from the link */
    color: var(--text); /* Set the text color to the default text color */
  }

  .logo {
    width: 50px; /* Default logo size */
    height: auto;
  }

  .nav-links {
    display: flex;
    gap: 2rem;
    align-items: center;
  }

  .nav-links a {
    color: var(--text);
    text-decoration: none;
    transition: color 0.2s;
  }

  .nav-links a:hover {
    color: var(--accent);
  }

  /* Mobile Menu Toggle */
  .mobile-menu-toggle {
    display: none; /* Hidden by default */
    flex-direction: column;
    justify-content: center; /* Center vertically */
    align-items: center; /* Center horizontally */
    width: 30px;
    height: 30px;
    background: transparent;
    border: none;
    cursor: pointer;
  }

  .bar {
    height: 3px;
    width: 100%;
    background-color: var(--text);
    transition: 0.3s;
  }

  @media (max-width: 768px) {
    .nav-content {
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
      width: 40px; /* Smaller logo size for smaller screens */
      height: auto;
    }

    .nav-links {
      display: none; /* Hide links by default */
      flex-direction: column;
      gap: 1rem;
      position: absolute; /* Position dropdown absolutely */
      right: 0; /* Align to the right */
      background-color: var(--nav-bg); /* Match background */
      padding: 1rem; /* Optional padding for dropdown */
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); /* Optional shadow for dropdown */
      width: 200px; /* Set a width for dropdown */
      z-index: 50; /* Ensure dropdown is above other elements */
      top: 100%; /* Position the dropdown below the toggle button */
      /* Optional: Set max-height and overflow for better UX */
      max-height: 300px; /* Limit height */
      overflow-y: auto; /* Scroll if too many items */
    }

    .nav-links.active {
      display: flex; /* Show links when active */
    }

    .mobile-menu-toggle {
      display: flex; /* Show mobile menu toggle */
      margin-left: auto; /* Push toggle to the right */
    }
  }
</style>


<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleButton = document.querySelector('.mobile-menu-toggle');
    const navLinks = document.querySelector('.nav-links');

    // Toggle dropdown on button click
    toggleButton.addEventListener('click', () => {
      navLinks.classList.toggle('active');
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', (event) => {
      if (!toggleButton.contains(event.target) && !navLinks.contains(event.target)) {
        navLinks.classList.remove('active');
      }
    });
  });
</script>

<script>
  // Function to update the logo based on the current theme
  function updateLogo() {
    const logo = document.getElementById('logo');
    const isDarkMode = document.documentElement.classList.contains('dark'); // Check if 'dark' class is active

    if (isDarkMode) {
      logo.src = '/V3redondo.png'; // Light logo for dark theme
    } else {
      logo.src = '/V3redondo-negro.png'; // Dark logo for light theme
    }
  }

  // Initial call on page load
  document.addEventListener('DOMContentLoaded', updateLogo);

  // Re-run the update function when the theme toggle button is clicked
  document.getElementById('theme-toggle').addEventListener('click', () => {
    // Delay the function to allow time for the class toggle to apply
    setTimeout(updateLogo, 10);
  });
</script>